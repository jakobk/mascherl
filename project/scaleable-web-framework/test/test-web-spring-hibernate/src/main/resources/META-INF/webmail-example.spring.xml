<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2015, Jakob Korherr

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/task    http://www.springframework.org/schema/task/spring-task.xsd
            http://cxf.apache.org/jaxrs                   http://cxf.apache.org/schemas/jaxrs.xsd">

    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
    <import resource="classpath:META-INF/mascherl.spring.xml" />

    <context:annotation-config />
    <context:component-scan base-package="org.mascherl.example" />

    <jaxrs:server address="/">
        <jaxrs:serviceBeans>
            <ref bean="indexPage" />
            <ref bean="signUpPage" />
            <ref bean="mailInboxPage" />
            <ref bean="mailDetailPage" />
            <ref bean="mailComposePage" />
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="org.mascherl.jaxrs.MascherlMessageBodyWriter" />
            <bean class="org.mascherl.jaxrs.MascherlRequestFilter" />
            <bean class="org.mascherl.jaxrs.MascherlResponseFilter" />
            <bean class="org.mascherl.example.filter.WebMailRequestFilter" />
            <bean class="org.mascherl.example.page.convert.LocalDateConverterProvider" />
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <bean class="org.mascherl.validation.cxf.CxfBeanValidationInInterceptor" />
        </jaxrs:inInterceptors>
        <jaxrs:invoker>
            <bean class="org.mascherl.async.cxf.CxfObservableInvoker" />
        </jaxrs:invoker>
    </jaxrs:server>

    <!-- JPA Entity Manager Factory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath*:/META-INF/persistence.xml"/>
        <property name="persistenceUnitName" value="mascherl"/>
        <property name="jpaDialect"><bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/></property>
        <property name="jpaVendorAdapter"><bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/></property>
    </bean>

    <!-- JPA Platform Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- process the @Transactional annotations: -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <!-- allow injection of the current user -->
    <bean id="pageBeanDependencyFactory" class="org.mascherl.example.page.ioc.PageBeanDependencyFactory" />
    <bean id="user" factory-bean="pageBeanDependencyFactory" factory-method="getCurrentUser" scope="prototype">
        <aop:scoped-proxy />
    </bean>

    <!--<task:annotation-driven executor="sendMailServiceExecutor" />-->
    <task:executor id="composeMailServiceExecutor" pool-size="10" queue-capacity="50" />
    <task:executor id="sendMailServiceExecutor" pool-size="10" queue-capacity="50" />

</beans>